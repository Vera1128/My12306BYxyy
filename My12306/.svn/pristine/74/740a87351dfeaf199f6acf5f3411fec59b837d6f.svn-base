package com.neuedu.my12306.usermgr.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import com.neuedu.my12306.usermgr.domain.Order;
import com.neuedu.my12306.usermgr.domain.User;
import com.neuedu.my12306.usermgr.service.OrderService;
import com.neuedu.my12306.usermgr.service.UserService;

/**
 * Servlet implementation class UserServlet
 */
//@WebServlet("/UserServlet")
public class UserServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UserServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String action = request.getParameter("action");
		if ("show".equals(action)) {
			try {
				doShow(request, response);
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		} else if ("addOrder".equals(action)) {
			try {
				doAddOrder(request, response);
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		} else if ("cancel".equals(action)) {
			try {
				doCancel(request, response);
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		} else if ("showUserInfo".equals(action)) {
			try {
				doShowUserInfo(request, response);
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
		}
	}
	private void doShowUserInfo(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		User u = (User)session.getAttribute("user");
		UserService us = UserService.getInstance();
		JSONObject data = new JSONObject();
		User user = us.findUser(u);
		if(user!=null){
			data.put("UserMessage", user);
		}
		request.setAttribute("userdata", data);
		request.getRequestDispatcher("/User/message.jsp").forward(request,
				response);
	}

	protected void doCancel(HttpServletRequest request,
			HttpServletResponse response) throws IOException {
		OrderService os = OrderService.getInstance();
		JSONObject data = new JSONObject();
		String[] ids = request.getParameter("ids_d").split(",");
		int[] orderIdList = new int[ids.length];
		for (int i = 0; i < orderIdList.length; i++) {
			orderIdList[i] = Integer.parseInt(ids[i]);
		}
		try {
			if (os.deleteOrder(orderIdList)) {
				data.put("flag", "yes");
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		out.print(data.toString());
		out.close();
	}
	
	private void doAddOrder(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		OrderService os = OrderService.getInstance();
		JSONObject data = new JSONObject();
		Order u = new Order();
		populate(request, u);

		if (os.save(u)) {
			data.put("flag", "yes");
		}
		response.setContentType("text/html;charset=utf-8");
		PrintWriter out = response.getWriter();
		out.print(data.toString());
		out.close();
	}

	protected void doShow(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		OrderService os = OrderService.getInstance();
		String strPageSize = request.getParameter("pageSize");
		String strPageNum = request.getParameter("PageNum");
		int pageSize = 5, pageNum = 1;
		if (strPageSize != null) {
			pageSize = Integer.parseInt(strPageSize);
		}
		if (strPageNum != null) {
			pageNum = Integer.parseInt(strPageNum);
		}

		// fill user first
		Order o = new Order();
//		populate(request, o);
		// u.setUsername("3");
//		int pages = us.getUserListPageCount(pageSize, u);
//		List<Integer> pageList = new ArrayList<Integer>();
//		for(int i = 1;i <= pages;i++)
//			pageList.add(i);
//		
		List<Order> orderList = os.getOrderList(pageSize, pageNum, o);
		JSONObject jsonData = new JSONObject();
		if (orderList != null) {
			jsonData.put("orderList", orderList);
//			jsonData.put("pages", pageList);
		} else {
			jsonData.put("orderList", null);
//			jsonData.put("pages", null);
		}
		request.setAttribute("data", jsonData);
		request.getRequestDispatcher("/User/Complete.jsp").forward(request,
				response);
	}

	protected void populate(HttpServletRequest request, Order o)
			throws NumberFormatException, Exception {
//		String loginIp = request.getRemoteAddr();
//		String username = request.getParameter("username");
		String order_date = request.getParameter("order_date");
		String name = request.getParameter("name");
		String fromplace = request.getParameter("fromplace");
		String toplace = request.getParameter("toplace");
		String begin = request.getParameter("begin");

		o.setOrder_date(order_date);
		o.setName(name);
		o.setFromplace(fromplace);
		o.setToplace(toplace);
		o.setBegin(begin);
	}


}
